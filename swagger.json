{
  "openapi": "3.0.0",
  "info": {
    "title": "API blogpost",
    "description": "API and a database for the production of content for a blog",
    "termsOfService": "http: //localhos:3000/terms",
    "contact": {
      "email": "samuelsoutosilva@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "API de test"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "User Login",
        "description": "this route is responsible for login in a user.",
        "tags": ["Auth"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              },
              "examples": {
                "login": {
                  "value": {
                    "email": "lewishamilton@gmail.com",
                    "password": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Some required fields are missing"
          },
          "400": {
            "description": "Invalid fields"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjp7ImlkIjo1LCJkaXNwbGF5TmFtZSI6InVzdWFyaW8gZGUgdGVzdGUiLCJlbWFpbCI6InRlc3RlQGVtYWlsLmNvbSIsImltYWdlIjoibnVsbCJ9LCJpYXQiOjE2MjAyNDQxODcsImV4cCI6MTYyMDY3NjE4N30.Roc4byj6mYakYqd9LTCozU1hd9k_Vw5IWKGL4hcCVG8"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "summary": "Add User",
        "description": "this route is responsible for registering a new user",
        "tags": ["User"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "user": {
                  "value": {
                    "displayName": "Brett Wiltshire",
                    "email": "brett@email.com",
                    "password": "123456",
                    "image": "http://4.bp.blogspot.com/_YA50adQ-7vQ/S1gfR_6ufpI/AAAAAAAAAAk/1ErJGgRWZDg/S45/brett.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "\"displayName\" length must be at least 8 characters long or \"email\" must be a valid email or \"password\" length must be at least 6 characters long"
          },
          "409": {
            "description": "User already registered"
          },
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjp7ImlkIjo1LCJkaXNwbGF5TmFtZSI6InVzdWFyaW8gZGUgdGVzdGUiLCJlbWFpbCI6InRlc3RlQGVtYWlsLmNvbSIsImltYWdlIjoibnVsbCJ9LCJpYXQiOjE2MjAyNDQxODcsImV4cCI6MTYyMDY3NjE4N30.Roc4byj6mYakYqd9LTCozU1hd9k_Vw5IWKGL4hcCVG8"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get User",
        "description": "this route is responsible for bring all users",
        "tags": ["User"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/responses/User"
                }
              }
            }
          },
          "401": {
            "description": "Token not found or Expired or invalid token"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "summary": "Get User by Id",
        "description": "this route is responsible for bring a user",
        "tags": ["User"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/responses/User"
                }
              }
            }
          },
          "401": {
            "description": "Token not found or Expired or invalid token"
          },
          "404": {
            "description": "User does not exist"
          }
        }
      }
    },
    "user/me": {
      "delete": {
        "summary": "Delete User Based in token id",
        "description": "this route is responsible for delete a user",
        "tags": ["User"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "204": {}
        }
      }
    },
    "/categories": {
      "post": {
        "summary": "Add Category",
        "description": "this route is responsible for adding a new category.",
        "tags": ["Categories"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref":"#/components/schemas/Category"
              },
              "examples": {
                "categories": {
                  "value": {
                    "name": "Typescript"                   
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Token not found or Expired or invalid token"
          },
          "400": {
            "description": "\"name\" is required"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/responses/Category"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Categories",
        "description": "responsible for bringing all categories.",
        "tags": ["Categories"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/responses/Categories"
                }
              }
            }
          },
          "401": {
            "description": "Token not found or Expired or invalid token"
          }
        }
      }
    },
    "post": {
      "post": {
        "summary": "Add Post",
        "description": "this route is responsible for adding a new post.",
        "tags": ["Post"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref":"#/components/schemas/Post"
              },
              "examples": {
                "categories": {
                  "value": {       
                    "title": "Latest updates, August 1st",
                    "content": "The whole text for the blog post goes here in this key",
                    "categoryIds": [1, 2]                   
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Some required fields are missing or \"categoryIds\" not found"
          },
          "401": {
            "description": "Token not found or Expired or invalid token"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/responses/Post"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Post",
        "description": "this route is responsible for bringing all posts based on the id of the logged in token.",
        "tags": ["Post"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "401": {
            "description": "Token not found or Expired or invalid token"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/responses/Posts"
                }
              }
            }
          }
        }
      }
    },
    "post/{id}": {
      "get": {
        "summary": "Get Post by Id",
        "description": "this route is responsible for bring based on id",
        "tags": ["Post"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "Token not found or Expired or invalid token"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/responses/Posts"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Edit Post by Id",
        "description": "this route is responsible for edit based on id",
        "tags": ["Post"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref":"#/components/schemas/Post"
              },
              "examples": {
                "categories": {
                  "value": {       
                    "title": "Latest updates, August 1st",
                    "content": "The whole text for the blog post goes here in this key"                  
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized user"
          },
          "400": {
            "description": "Some required fields are missing"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/responses/Posts"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Post by Id",
        "description": "this route is responsible for delete based on id",
        "tags": ["Post"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized user"
          },
          "204": {},
          "404": {
            "description": "Post does not exist"
          }
        }
      }
    },
    "post/{q}": {
      "get": {
        "summary": "Get Post by query",
        "description": "this route is responsible for bringing the posts based on the passed query as a parameter",
        "tags": ["Post"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "q",
            "in": "path",
            "description": "User query",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "Token not found or Expired or invalid token"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/responses/PostSearch"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Category": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "Post": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "cotegoryIds": { 
            "type": "array"
          }
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "image": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "Users": {
        "type": "array",
        "example": [	
          {
            "id": 1,
            "displayName": "Lewis Hamilton",
            "email": "lewishamilton@gmail.com",
            "image": "https://upload.wikimedia.org/wikipedia/commons/1/18/Lewis_Hamilton_2016_Malaysia_2.jpg"
          },
          {
            "id": 2,
            "displayName": "Michael Schumacher",
            "email": "MichaelSchumacher@gmail.com",
            "image": "https://sportbuzz.uol.com.br/media/_versions/gettyimages-52491565_widelg.jpg"
          }
        ]
      },
      "User": {
        "type": "object",
        "example": {
          "id": 1,
          "displayName": "Lewis Hamilton",
          "email": "lewishamilton@gmail.com",
          "image": "https://upload.wikimedia.org/wikipedia/commons/1/18/Lewis_Hamilton_2016_Malaysia_2.jpg"
        }
      },
      "Category": {
        "type": "object",
        "example": {
          "id": 3,
          "name": "Typescript"
        }
      },
      "Categories": {
        "type": "array",
        "example": [
            {
              "id": 1,
              "name": "Inovação"
            },
            {
              "id": 2,
              "name": "Escola"
            }
        ]
      },
      "Post": {
        "type": "object",
        "example": {
          "id": 3,
          "title": "Latest updates, August 1st",
          "content": "The whole text for the blog post goes here in this key",
          "userId": 1,
          "updated": "2022-05-18T18:00:01.196Z",
          "published": "2022-05-18T18:00:01.196Z"
        }
      },
      "Posts": {
        "type": "array",
        "example": [
          {
            "id": 1,
            "title": "Post do Ano",
            "content": "Melhor post do ano",
            "userId": 1,
            "published": "2011-08-01T19:58:00.000Z",
            "updated": "2011-08-01T19:58:51.000Z",
            "user": {
              "id": 1,
              "displayName": "Lewis Hamilton",
              "email": "lewishamilton@gmail.com",
              "image": "https://upload.wikimedia.org/wikipedia/commons/1/18/Lewis_Hamilton_2016_Malaysia_2.jpg"
            },
            "categories": [
              {
                "id": 1,
                "name": "Inovação"
              }
            ]
          }     
        ]
      },
      "PostSearch": {
        "type":"array",
        "example": [
          {
            "id": 1,
            "title": "Post do Ano",
            "content": "Melhor post do ano",
            "userId": 1,
            "published": "2011-08-01T19:58:00.000Z",
            "updated": "2011-08-01T19:58:51.000Z",
            "user": {
              "id": 1,
              "displayName": "Lewis Hamilton",
              "email": "lewishamilton@gmail.com",
              "image": "https://upload.wikimedia.org/wikipedia/commons/1/18/Lewis_Hamilton_2016_Malaysia_2.jpg"
            },
            "categories": [
              {
                "id": 1,
                "name": "Inovação"
              }
            ]
          }
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "schema": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}

